#include"stm32l4xx.h"
//configuration structure for GPIO pin
typedef struct
{
	uint8_t  GPIO_PinNumber;
	uint8_t  GPIO_PinMode;
	uint8_t  GPIO_PinSpeed;
	uint8_t	 GPIO_PinPuPdControl;
	uint8_t  GPIO_PinOPType;
	uint8_t  GPIO_PinAltFunMode;
}GPIO_PinConfig_t;

//handle structure for gpio pin
typedef struct
{
	GPIO_RegDef_t *pGPIOx;
	GPIO_PinConfig_t GPIO_PinConfig;
}GPIO_Handle_t;



//***********APIs supported by  the driver**************

//peripheral clock setup
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi);

//init and deinit gpio
void GPIO_Init(GPIO_Handle_t *pGPIOHandle);
void GPIO_DeInit(GPIO_RegDef_t *pGPIOx);


//APIs for reading and writing into/from gpio's
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx ,uint8_t  GPIO_PinNumber);
uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *pGPIOx);
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx ,uint8_t  GPIO_PinNumber , uint32_t value);
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx , uint32_t value);
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx ,uint8_t  GPIO_PinNumber);

//APIs for IRQ configuration  and  handling
void GPIO_IRQConfig(uint8_t IRQNumber,uint8_t IRQPriority , uint8_t EnorDi);
void GPIO_IRQHandling(GPIO_PinNumber);

